# """
# Django settings for ecommerce_api project.

# Generated by 'django-admin startproject' using Django 5.2.6.

# For more information on this file, see
# https://docs.djangoproject.com/en/5.2/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.2/ref/settings/
# """

# from pathlib import Path
# from decouple import config

# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent


# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-b6-31jl&^t*b(f!a!1qp#f^6hw95)if6tx$kmpqnu!a(+vr##_'

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

# # ALLOWED_HOSTS = []
# ALLOWED_HOSTS = ['localhost', '127.0.0.1', '*']

# SECRET_KEY = config('SECRET_KEY', default='django-insecure-change-me-in-production')


# # Application definition

# INSTALLED_APPS = [
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
    
#     # Third party apps
#     'rest_framework',
#     'oauth2_provider',
#     'corsheaders',
#     # 'oauth2_provider.contrib.oidc',
    
#     # Local apps
#     'customers',
#     'products',
#     'orders',
#     'authentication',
# ]

# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
#         'rest_framework.authentication.SessionAuthentication',
#     ],
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.IsAuthenticated',
#     ],
#     'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
#     'PAGE_SIZE': 20,
#     'DEFAULT_RENDERER_CLASSES': [
#         'rest_framework.renderers.JSONRenderer',
#     ],
# }

# OAUTH2_PROVIDER = {
#     'SCOPES': {
#         'read': 'Read scope',
#         'write': 'Write scope',
#     },
#     'ACCESS_TOKEN_EXPIRE_SECONDS': 3600,
#     'REFRESH_TOKEN_EXPIRE_SECONDS': 3600 * 24 * 7,  # 1 week
# }

# OAUTH2_PROVIDER.update({
#     'OIDC_ENABLED': True,
#     'OIDC_RSA_PRIVATE_KEY': '''-----BEGIN RSA PRIVATE KEY-----
# MIIEpAIBAAKCAQEA4f5wg5l2hKsTeNem/V41fGnJm6gOdrj8ym3rFkEjWT2btYaf
# ammP3NGJDqj8qCjCJdBJB1i4sI5J4aJjtR7WN9D0F5p1iiRn2J5j3k5QRJ8VVJ
# ... (Generate your own RSA key for production)
# -----END RSA PRIVATE KEY-----''',
    
#     'SCOPES': {
#         'openid': 'OpenID Connect scope',
#         'read': 'Read scope',
#         'write': 'Write scope',
#         'profile': 'Access to user profile',
#         'email': 'Access to user email',
#     },
    
#     'OIDC_USERINFO': 'authentication.oidc.userinfo',
#     'OAUTH2_VALIDATOR_CLASS': 'authentication.validators.CustomOAuth2Validator',
# })

# # CORS settings
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:3000",
#     "http://127.0.0.1:3000",
# ]

# CORS_ALLOW_CREDENTIALS = True

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = config('EMAIL_HOST', default='smtp.gmail.com')
# EMAIL_PORT = config('EMAIL_PORT', default=587, cast=int)
# EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=True, cast=bool)
# EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')
# EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')
# DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', default='noreply@example.com')

# # Africa's Talking SMS Settings
# AFRICAS_TALKING_USERNAME = config('AFRICAS_TALKING_USERNAME', default='sandbox')
# AFRICAS_TALKING_API_KEY = config('AFRICAS_TALKING_API_KEY', default='')
# AFRICAS_TALKING_SENDER_ID = config('AFRICAS_TALKING_SENDER_ID', default='')

# # Admin email for order notifications
# ADMIN_EMAIL = config('ADMIN_EMAIL', default='admin@example.com')

# # Celery Configuration (for background tasks)
# CELERY_BROKER_URL = config('REDIS_URL', default='redis://localhost:6379/0')
# CELERY_RESULT_BACKEND = config('REDIS_URL', default='redis://localhost:6379/0')
# CELERY_ACCEPT_CONTENT = ['json']
# CELERY_TASK_SERIALIZER = 'json'
# CELERY_RESULT_SERIALIZER = 'json'
# CELERY_TIMEZONE = 'UTC'



# # MIDDLEWARE = [
# #     'django.middleware.security.SecurityMiddleware',
# #     'django.contrib.sessions.middleware.SessionMiddleware',
# #     'django.middleware.common.CommonMiddleware',
# #     'django.middleware.csrf.CsrfViewMiddleware',
# #     'django.contrib.auth.middleware.AuthenticationMiddleware',
# #     'django.contrib.messages.middleware.MessageMiddleware',
# #     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# # ]
# MIDDLEWARE = [
#     'corsheaders.middleware.CorsMiddleware',
#     'oauth2_provider.middleware.OAuth2TokenMiddleware',
#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

# ROOT_URLCONF = 'ecommerce_api.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'ecommerce_api.wsgi.application'


# # Database
# # https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# # Password validation
# # https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/5.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_TZ = True


# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/5.2/howto/static-files/

# STATIC_URL = 'static/'

# # Default primary key field type
# # https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


from pathlib import Path
from decouple import config
import os

BASE_DIR = Path(__file__).resolve().parent.parent


SECRET_KEY = config('SECRET_KEY', default='django-insecure-b6-31jl&^t*b(f!a!1qp#f^6hw95)if6tx$kmpqnu!a(+vr##_')
DEBUG = config('DEBUG', default=True, cast=bool)
ALLOWED_HOSTS = ['localhost', '127.0.0.1', '*']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Third party apps
    'rest_framework',
    'django_filters',
    'oauth2_provider',
    'corsheaders',
    # 'oauth2_provider.contrib.oidc',
    
    # Local apps
    'customers',
    'products',
    'orders',
    'authentication',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'oauth2_provider.middleware.OAuth2TokenMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ecommerce_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecommerce_api.wsgi.application'

# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Custom User Model
AUTH_USER_MODEL = 'customers.Customer'

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Africa/Nairobi'
USE_I18N = True
USE_TZ = True

# Static files
STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# REST Framework Settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    # Add filtering and search backends
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
}

# OAuth2 Provider Settings (SIMPLIFIED)
OAUTH2_PROVIDER = {
    'SCOPES': {
        'read': 'Read scope',
        'write': 'Write scope',
        'openid': 'OpenID Connect scope',
    },
    'ACCESS_TOKEN_EXPIRE_SECONDS': 3600,
    'REFRESH_TOKEN_EXPIRE_SECONDS': 3600 * 24 * 7,
}

# CORS settings
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
]
CORS_ALLOW_CREDENTIALS = True

# Email settings
EMAIL_BACKEND = config('EMAIL_BACKEND', default='django.core.mail.backends.console.EmailBackend')
EMAIL_HOST = config('EMAIL_HOST', default='smtp.gmail.com')
EMAIL_PORT = config('EMAIL_PORT', default=587, cast=int)
EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=True, cast=bool)
EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')
DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', default='noreply@example.com')

# Africa's Talking SMS Settings
AFRICAS_TALKING_USERNAME = config('AFRICAS_TALKING_USERNAME', default='sandbox')
AFRICAS_TALKING_API_KEY = config('AFRICAS_TALKING_API_KEY', default='')
AFRICAS_TALKING_SENDER_ID = config('AFRICAS_TALKING_SENDER_ID', default='')

# Admin email for order notifications
ADMIN_EMAIL = config('ADMIN_EMAIL', default='admin@example.com')

# Celery Configuration
CELERY_BROKER_URL = config('REDIS_URL', default='redis://localhost:6379/0')
CELERY_RESULT_BACKEND = config('REDIS_URL', default='redis://localhost:6379/0')
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Africa/Nairobi'
CELERY_TASK_ALWAYS_EAGER = True  # Run tasks immediately, no broker needed
CELERY_TASK_EAGER_PROPAGATES = True  # Propagate exceptions

OAUTH2_PROVIDER = {
    'SCOPES': {
        'read': 'Read scope',
        'write': 'Write scope',
    },
    'ACCESS_TOKEN_EXPIRE_SECONDS': 3600,
    'REFRESH_TOKEN_EXPIRE_SECONDS': 3600 * 24 * 7,  # 1 week
}

OAUTH2_PROVIDER.update({
    'OIDC_ENABLED': True,
    'OIDC_RSA_PRIVATE_KEY': '''-----BEGIN PRIVATE KEY-----
MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDZX1Ycll+q1EeM
0xG/5Bstwf/pxwRErf+/QqFTmtRCRglL6Pkhq+oRUpBlAsdGj4nAGEZSzBFaXn/Z
qOi6Vfsbq3vt3RDsoN/OIJ97y3QkwGXID4lC8xhYv0/ABULGuTJpbZJzFh//RiDX
zx0O72Iq5GoEGs44xm1sfPQXjiTXlFHeEeP4Yna4TfpN1WhnCFgYsstiVn97UfNn
AOj0oy7qIvrP/1iOd4kovBaV5SKhL2Gohqq3uAWnl6uaXdp7uX32MEUo142Z7bV1
zVj3977odtdYWKGrKnG0fCdHIwGp/Ke84VylZ5D/Po4Aq5HTSJwekf0oULQHmcj6
gqBO7GFnAgMBAAECggEAH+mYtVK4UdafeIPGT9M30ERyg0pGDKU07knkcGdDMUWh
+MSHytM35nomG8ZIJkpNcWe+70npZEiKYZSkMjMMThgjdhzl7q+Bm/v7HgwVDY43
gyMQxkT1NpZDqY+8KXun9IVzIjVF1k7f5H8SJ46qbVyiWd7rlrc++lXv6gNi0kk9
ZcOgZows5/PzGiMa4Ix7uzeOaXit6kYR8n1zuggl4GBiZxo5Dt/7XYCimW+03427
1EcLRMwQ5Cz7UHo98XIgFWgyh5iTFoRd8/FuK89koOAgUCEvRMGI87Ijj/fUZNlz
Y1NkIX7/hm5FQiyeD9E/e+wwgoKR12J4Skdi35YNiQKBgQDsLMy7mg4OSPkj0TFk
6Atuid2UTFGlJNZvp/eoV5QIvop31dwbrJWSfUpiZiV3BaE3rjEowdwqFBAiuSBB
Oq0lQJt/eZnyXz1H3DCWZ4AJ1Phexx1Is/6SWIqkhMCPzHB6xSvwRx+sqQejfsLR
wshoTh8B6BKhr6pgFoeJHVbOqQKBgQDrnnwjB3ShXuD2ab6AKM+zD7JUcjktwJQe
zCEnMN1ldF9aKYWBvSaJcrRdfEac+umJKhVzK8u3K98jhXHYAHv9MYJqPdNAw0O2
YB4YD01FSuxQMpPD+xMVHNQ5CqORvGY23xOPcH1swM7S+ZdTiTIQDL/dSTvJkwjX
aORMLrMJjwKBgCt0Cq8xpwhl0MEQSkBAmWnbH9ObPyJdZr7gbqaghnIdbKijxn2p
AVQUjU0Rci817/WorQ7MrE9ppZZd7VtTCmxiOLn5i6OWdlX0Y1Qo8tvcPV5i0DaC
N4KBm/CtJCjQ+pj8EhuBWoiQCQHB3uJtLiZSyU22f0cUZQqM2p8VsNURAoGAMKSl
iC3P3EjUNMsb8yV5y8Pf0yNJvrJVYg5OgeLKsllWHi0YTPKZ9CJkLjCr+1ipwhGY
IBDYm9ZI2PKB0FA5SMph3EErTeGCJzKsw9bU4wtWwi/O5dT92Yv8HFKf9kRo7ccc
KK7Wlg8wI8o3fZ2DYmDfc3XdC/55As+64id5+u0CgYBWMgs4ixbcoxg/arCCTN/p
GVVtPlGdA9XRL8vytBa3NFXFPhqyRz2LR4Xx/iOoQZ7MQjgcKrSk1UuLF9M8bfZX
FhQ+EtstSTiLY9sX3RlalQim9fRqPAUdf6FuyPZwxxLk81woZyOaxz57KDKA9TOg
NgS0aZm2CXZollNUPsFLFQ==
-----END PRIVATE KEY-----''',
    
    'SCOPES': {
        'openid': 'OpenID Connect scope',
        'read': 'Read scope',
        'write': 'Write scope',
        'profile': 'Access to user profile',
        'email': 'Access to user email',
    },
    
    'OIDC_USERINFO': 'authentication.oidc.userinfo',
    'OAUTH2_VALIDATOR_CLASS': 'authentication.validators.CustomOAuth2Validator',

    # ID Token configuration
    'OIDC_ID_TOKEN_EXPIRE_SECONDS': 3600,
    'OIDC_SUBJECT_IDENTIFIER_ALGORITHM': 'public',
    
    # Response types
    'OIDC_RESPONSE_TYPES_SUPPORTED': [
        'code',
        'id_token',
        'id_token token',
        'code id_token',
        'code token',
        'code id_token token',
    ],
    
    # Grant types
    'OIDC_GRANT_TYPES_SUPPORTED': [
        'authorization_code',
        'implicit',
        'refresh_token',
         ],
    
    # Token endpoint auth methods
    'OIDC_TOKEN_ENDPOINT_AUTH_METHODS_SUPPORTED': [
        'client_secret_post',
        'client_secret_basic',
    ],
})
