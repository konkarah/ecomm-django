apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-app
  namespace: ecommerce-api
spec:
  replicas: 2  # Limited replicas due to SQLite constraints
  selector:
    matchLabels:
      app: django-app
  template:
    metadata:
      labels:
        app: django-app
    spec:
      containers:
      - name: django
        image: your-docker-repo/ecommerce-api:latest  # Replace with your image
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: ecommerce-config
        - secretRef:
            name: ecommerce-secret
        volumeMounts:
        - name: sqlite-storage
          mountPath: /app/data
        livenessProbe:
          httpGet:
            path: /api/health/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/health/
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: sqlite-storage
        persistentVolumeClaim:
          claimName: sqlite-pvc
      initContainers:
      - name: django-migrate
        image: your-docker-repo/ecommerce-api:latest  # Same image
        command: ['python', 'manage.py', 'migrate']
        envFrom:
        - configMapRef:
            name: ecommerce-config
        - secretRef:
            name: ecommerce-secret
        volumeMounts:
        - name: sqlite-storage
          mountPath: /app/data

---
apiVersion: v1
kind: Service
metadata:
  name: django-service
  namespace: ecommerce-api
spec:
  selector:
    app: django-app
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP

---